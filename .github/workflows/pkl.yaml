name: PKL

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.next_version.outputs.new_version }}
      new_tag: ${{ steps.create_tag.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Clone semver-tool
        run: git clone https://github.com/fsaintjacques/semver-tool.git

      - name: Analyze commit messages
        run: |
          BUMP_TYPE="patch"
          LAST_TAG=$(git describe --tags --abbrev=0)
          git log ${LAST_TAG}..HEAD --oneline | while read line ; do
            if [[ "$line" == *"feat:"* ]]; then
              BUMP_TYPE="minor"
            elif [[ "$line" == *"BREAKING CHANGE:"* ]]; then
              BUMP_TYPE="major"
              break
            fi
          done
          echo "BUMP_TYPE=$BUMP_TYPE" >> $GITHUB_ENV

      - name: Determine next version
        id: next_version
        run: |
          CURRENT_VERSION=$(git describe --tags --abbrev=0 | sed 's/modular@//')
          NEW_VERSION=$(./semver-tool/src/semver bump $BUMP_TYPE $CURRENT_VERSION)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create and push tag
        id: create_tag
        run: |
          NEW_TAG="modular@${{ steps.next_version.outputs.new_version }}"
          git config --global user.email 'renatoaraujo@users.noreply.github.com'
          git config --local user.name "GitHub Action"
          git tag $NEW_TAG
          git push origin $NEW_TAG
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  artifact:
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download PKL CLI Binary
        run: |
          curl -L -o pkl.bin https://repo1.maven.org/maven2/org/pkl-lang/pkl-cli-linux-amd64/0.25.1/pkl-cli-linux-amd64-0.25.1.bin
          chmod +x pkl.bin

      - name: Prepare PKL Project
        run: |
          ./pkl.bin project package codegen/src/ --output-path out/pkl-package/ -e VERSION=${{ needs.tag.outputs.new_version }}

      - name: Upload PKL package
        uses: actions/upload-artifact@v4
        with:
          name: pkl-package
          path: out/pkl-package/
